#ifndef ATU_CTP_ERROR_H_
#define ATU_CTP_ERROR_H_

const string GetCTPErrorMsg(const int errno)
{
  switch(errno)
  {

    case      0  : return "CTP:Correct";
    case      1  : return "CTP:NotInSyncState";
    case      2  : return "CTP:SessionInformationIsInconsistent";
    case      3  : return "CTP:IllegalLogin";
    case      4  : return "CTP:UserIsNotActive";
    case      5  : return "CTP:DuplicateLogin";
    case      6  : return "CTP:NotYetLoggedIn";
    case      7  : return "CTP:NotYetInitialized";
    case      8  : return "CTP:FrontIsNotActive";
    case      9  : return "CTP:NoThisPermission";
    case     10  : return "CTP:ModifySomeoneElse'sPassword";
    case     11  : return "CTP:CanNotFindTheUser";
    case     12  : return "CTP:CanNotFindTheBrokerageFirm";
    case     13  : return "CTP:CanNotFindInvestor";
    case     14  : return "CTP:TheOriginalPasswordDoesNotMatch";
    case     15  : return "CTP:ReportFieldIsIncorrect";
    case     16  : return "CTP:NoContractFound";
    case     17  : return "CTP:ContractCanNotBeTraded";
    case     18  : return "CTP:BrokerageIsNotAMemberOfTheExchange";
    case     19  : return "CTP:InvestorsAreNotActive";
    case     20  : return "CTP:InvestorsAreNotOpenToTheExchange";
    case     21  : return "CTP:TheTradingSeatIsNotConnectedToTheExchange";
    case     22  : return "CTP:ReportError:NoRepeatOrdersAreAllowed";
    case     23  : return "CTP:IncorrectReportOperationField";
    case     24  : return "CTP:WithdrawalHasBeenSubmitted_DoNotAllowRepeatedWithdrawal";
    case     25  : return "CTP:WithdrawalCanNotFindTheCorrespondingReport";
    case     26  : return "CTP:TheBillHasBeenFullyTradedOrWithdrawnAndCanNotBeWithdrawn";
    case     27  : return "CTP:UnsupportedFeatures";
    case     28  : return "CTP:NoPostTransactionRights";
    case     29  : return "CTP:OnlyOpenPositions";
    case     30  : return "CTP:ClosingMoreThanPositions";
    case     31  : return "CTP:Underfunded";
    case     32  : return "CTP:PrimaryKeyRepeat";
    case     33  : return "CTP:CanNotFindPrimaryKey";
    case     34  : return "CTP:SettingUpBrokerageFirmInactiveStatusFailed";
    case     35  : return "CTP:BrokerageCompanyIsInSync";
    case     36  : return "CTP:BrokerageCompanyHasBeenSynchronized";
    case     37  : return "CTP:SpotTradingCanNotBeShort";
    case     38  : return "CTP:IllegalSettlementReference";
    case     39  : return "CTP:ExchangeNetworkConnectionFailed";
    case     40  : return "CTP:ExchangeUnprocessedRequestExceedsTheNumberOfLicenses";
    case     41  : return "CTP:TheNumberOfRequestsSentByTheExchangePerSecondExceedsTheNumberOfPermits";
    case     42  : return "CTP:TheBillingResultsAreNotConfirmed";
    case     43  : return "CTP:NoCorrespondingEntryRecord";
    case     44  : return "CTP:ExchangeHasEnteredContinuousTradingStatus";
    case     45  : return "CTP:CanNotFindEmbedded(single)Single";
    case     46  : return "CTP:Embedded(withdrawalSingle)SingleHasBeenSent";
    case     47  : return "CTP:Embedded(withdrawalSingle)SingleHasBeenDeleted";
    case     48  : return "CTP:InvalidInvestorOrPassword";
    case     49  : return "CTP:IllegalLoginIpAddress";
    case     50  : return "CTP:FlatPositionIsInsufficient";
    case     51  : return "CTP:FlatBeforeTheLackOfPositions";
    case     52  : return "CTP:BrokerageCompanyDoesNotHaveEnoughAvailableQuantity";
    case     53  : return "CTP:InvestorsAreNotAdequatelyAvailable";
    case     54  : return "CTP:BrokerageDoesNotSupportConditionalOrders";
    case     55  : return "CTP:RetransmitUnknownSingleEconomyCompany/InvestorMismatch";
    case     56  : return "CTP:SynchronizationDynamicTokenFailed";
    case     57  : return "CTP:DynamicTokenVerificationError";
    case     58  : return "CTP:DynamicTokenConfigurationInformationNotFound";
    case     59  : return "CTP:UnsupportedDynamicTokenType";
    case     60  : return "CTP:UserOnlineSessionExceedsLimit";
    case     61  : return "CTP:TheExchangeDoesNotSupportArbitrageTypes";
    case     62  : return "CTP:NoConditionalTransactionRights";
    case     63  : return "CTP:ClientAuthenticationFailed";
    case     64  : return "CTP:TheClientIsNotAuthenticated";
    case     65  : return "CTP:ThisContractDoesNotSupportInterchangeableTypeDeclarations";
    case     66  : return "CTP:ThisOptionContractOnlySupportsSpeculativeTypes";
    case     67  : return "CTP:ExecutionErrorIsNotAllowedToRepeat";
    case     68  : return "CTP:RetransmissionUnknownExecutionBrokerBroker/InvestorMismatch";
    case     69  : return "CTP:OnlyOptionContractsAreEnforceable";
    case     70  : return "CTP:TheOptionContractDoesNotSupportExecution";
    case     71  : return "CTP:ExecutionAnnouncementFieldIsIncorrect";
    case     72  : return "CTP:ExecutionAnnouncementTheWithdrawalHasBeenSubmittedAndIsNotAllowedToBeRepeated";
    case     73  : return "CTP:ExecutionDeclaringAWithdrawalCanNotFindACorrespondingExecutionDeclaration";
    case     74  : return "CTP:InsufficientJobPosition";
    case     75  : return "CTP:ContinuousLoginFailedTimesExceeded_LoginIsDisabled";
    case     76  : return "CTP:IllegalSilverAgentRelationship";
    case     77  : return "CTP:NoThisFunction";
    case     78  : return "CTP:SendAReportFailed";
    case     79  : return "CTP:SendAReportOperationFailed";
    case     80  : return "CTP:ExchangeDoesNotSupportThePriceType";
    case     81  : return "CTP:WrongExecutionType";
    case     82  : return "CTP:InvalidCombinationContract";
    case     83  : return "CTP:ThisContractDoesNotSupportInquiry";
    case     84  : return "CTP:RetransmitUnknownQuotationsBroker/InvestorMismatch";
    case     85  : return "CTP:ThisContractDoesNotSupportQuotes";
    case     86  : return "CTP:QuoteWithdrawalCanNotFindTheCorrespondingOffer";
    case     87  : return "CTP:TheOptionContractDoesNotSupportTheAbandonmentOfExecution";
    case     88  : return "CTP:ThisCombinationOptionContractOnlySupportsIoc";
    case     89  : return "CTP:OpenFileFailed";
    case     90  : return "CTP:QueryNotReady_PleaseTryAgainLater";
    case     91  : return "CTP:TheErrorReturnedByTheExchange";
    case     92  : return "CTP:QuotationDerivativesAreRequiredToWaitForTheExchangeToReturn";
    case     93  : return "CTP:CanNotFindPortfolioContractMapping";
    case    101  : return "CTP:UsersDoNotHaveTheRightToReportInThisSystem";
    case    102  : return "CTP:SystemIsMissingDisasterCheckoutNumber";
    case   1000  : return "CTP:BankTransfer:SendAgencyCodeError";
    case   1001  : return "CTP:SilverTransfer:TakeThePlatformSerialNumberWrong";
    case   1002  : return "CTP:BankTransfer:IllegalTransferBank";
    case   1003  : return "CTP:BankTransfer:AlreadyOpenAnAccount";
    case   1004  : return "CTP:BankTransfer:NotOpenAnAccount";
    case   1005  : return "CTP:SilverTransfer:Processing";
    case   1006  : return "CTP:BankTransfer:TransactionTimeout";
    case   1007  : return "CTP:SilverTransfers:NoRecordFound";
    case   1008  : return "CTP:BankTransfer:CanNotFindTheOriginalTransactionWasRed";
    case   1009  : return "CTP:BankTransfer:ConnectionToHostFailed";
    case   1010  : return "CTP:BankTransfer:FailedToSend";
    case   1011  : return "CTP:SilverTransfer:LateResponse";
    case   1012  : return "CTP:BankTransfer:PunchTradingBankCodeError";
    case   1013  : return "CTP:BankTransfer:PunchTradingBankAccountError";
    case   1014  : return "CTP:BankTransfer:PunchTradingBrokerCodeIncorrect";
    case   1015  : return "CTP:BankTransfer:PunchTradingFundAccountError";
    case   1016  : return "CTP:BankTransfer:PunchTransactionAmountIsWrong";
    case   1017  : return "CTP:BankTransfer:DatabaseOperationError";
    case   1018  : return "CTP:BankTransfer:FailedToSendToTheTradingSystem";
    case   1019  : return "CTP:SilverTransfer:NoSignIn";
    case   1020  : return "CTP:SilverTransfer:HasBeenSigned";
    case   1021  : return "CTP:BankTransfer:AmountOrNumberOfOverrun";
    case   1022  : return "CTP:BankTransfer:ThisTimePeriodCanNotBeTransferred";
    case   1023  : return "CTP:BankHostWrong";
    case   1024  : return "CTP:BankTransfer:TheBankHasBeenPositive";
    case   1025  : return "CTP:BankTransfer:BankWaterDoesNotExist";
    case   1026  : return "CTP:BankTransfer:TheAgencyDidNotSignUp";
    case   1027  : return "CTP:BankTransfer:ThereIsTransfer_CanNotSellHouseholds";
    case   1028  : return "CTP:BankTransfer:BankDoesNotSupportRed";
    case   1029  : return "CTP:BankTransfer:RepeatedBankWater";
    case   1030  : return "CTP:BankTransfer:TransferSystemIsBusy_TryAgainLater";
    case   1031  : return "CTP:BankTransfer:TheMacKeyIsBeingSynchronized";
    case   1032  : return "CTP:BankTransfer:TheFundsAccountHasBeenRegistered";
    case   1033  : return "CTP:BankTransfer:BankAccountHasBeenRegistered";
    case   1034  : return "CTP:BankTransfer:RepeatTheBankWater_Re-successful";
    case   1035  : return "CTP:BankTransfer:TheCurrencyCodeIsNotSupported";
    case   1036  : return "CTP:BankTransfer:MacValueVerificationFailed";
    case   1037  : return "CTP:BankTransfer:DoesNotSupportTheBankSideInitiatedTwoAgentsTransferAndQuery";
    case   1038  : return "CTP:BankTransfer:PinKeyIsBeingSynchronized";
    case   1039  : return "CTP:BankTransfer:CcbInitiatedTwoAgentsInquiries";
    case   2000  : return "CTP:TheOfferIsNotConnectedToTheBank";
    case   2001  : return "CTP:MoneyPasswordError";
    case   2004  : return "CTP:BankSerialNumberRepeat";
    case   2005  : return "CTP:ReportSerialNumberRepeat";
    case   2006  : return "CTP:StrokeIsNotPresent(redPositive)";
    case   2007  : return "CTP:TheOriginalWaterHasBeenPositive(redIsTrading)";
    case   2008  : return "CTP:DoesNotMatchTheOriginalWaterInformation(redTrade)";
    case   2009  : return "CTP:IdNumberOrTypeOfError";
    case   2011  : return "CTP:FundAccountDoesNotExist";
    case   2012  : return "CTP:FundAccountHasBeenSold";
    case   2013  : return "CTP:TheTransactionCanNotBePerformedManually";
    case   2014  : return "CTP:TransferAmountIsIncorrect";
    case   2015  : return "CTP:CanNotFindExchangeRate";
    case   3001  : return "CTP:SilverExchange:TakeThePlatformSerialNumberWrong";
    case   3002  : return "CTP:SilverSwap:IllegalTransferBank";
    case   3005  : return "CTP:SilverExchange:Processing";
    case   3006  : return "CTP:SilverSwap:TransactionTimeout";
    case   3007  : return "CTP:SilverSwap:NoRecordFound";
    case   3009  : return "CTP:SilverExchange:ConnectionToHostFailed";
    case   3010  : return "CTP:SilverExchange:SendFailed";
    case   3011  : return "CTP:SilverExchange:LateResponse";
    case   3017  : return "CTP:SilverExchange:DatabaseOperationError";
    case   3019  : return "CTP:SilverSwap:NoSignIn";
    case   3020  : return "CTP:SilverExchange:HasBeenSigned";
    case   3021  : return "CTP:SilverExchange:TheAmountOrTheNumberOfOverrun";
    case   3022  : return "CTP:SilverExchange:ThisTimePeriodCanNotExchange";
    case   3023  : return "CTP:SilverExchange:BankHostWrong";
    case   3026  : return "CTP:SilverExchange:InstitutionsAreNotSigned";
    case   3030  : return "CTP:SilverExchange:ExchangeSystemIsBusy_TryAgainLater";
    case   3035  : return "CTP:SilverSwap:TheCurrencyCodeIsNotSupported";
    case   3036  : return "CTP:SilverExchange:BankAccountIsNotCorrect";
    case   3037  : return "CTP:SilverExchange:BankAccountBalanceIsInsufficient";
    case   3038  : return "CTP:SilverExchange:VoucherNumberIsRepeated";
    case 999999  : return "CTP:WaitingForTheSilverOfferToProcessTheResults";

    default      : return "CTP:UnknownError.";
  }
}

#endif
